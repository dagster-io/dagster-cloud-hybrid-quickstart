name: Hybrid Prod Deployment
on:
  push:
    branches:
      - "main"
concurrency: 
  # Cancel in-progress deploys to main branch
  group: ${{ github.ref }}
  cancel-in-progress: true
env:
  DAGSTER_CLOUD_URL: ${{ secrets.DAGSTER_CLOUD_URL }}
  DAGSTER_CLOUD_API_TOKEN: ${{ secrets.DAGSTER_CLOUD_API_TOKEN }}

jobs:
  parse_workspace:
    runs-on: ubuntu-latest
    outputs:
      build_info: ${{ steps.parse-workspace.outputs.build_info }}
    steps:
      - uses: actions/checkout@v3
      - name: Parse cloud workspace
        id: parse-workspace
        uses: dagster-io/dagster-cloud-action/actions/utils/parse_workspace@v0.1
        with:
          dagster_cloud_file: dagster_cloud.yaml

  dagster_cloud_build_push:
    runs-on: ubuntu-latest
    needs: parse_workspace
    name: Dagster Hybrid Deploy
    strategy:
      fail-fast: false
      matrix:
        location: ${{ fromJSON(needs.parse_workspace.outputs.build_info) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      ## GCP Workload Identity - Keyless authentication
      # - id: 'auth'
      #   name: Auth
      #   uses: google-github-actions/auth@v1
      #   with:
      #     token_format: 'access_token'
      #     workload_identity_provider: 'projects/<gcp_project_number>/locations/global/workloadIdentityPools/<workloadIdentity_id>/providers/<workloadIdentity_provider_id>'
      #     service_account: '<gcp_service_account>@<gcp_project_id>.iam.gserviceaccount.com'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:  ${{ secrets.AWS_REGION }}

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v1

      ## DockerHub
      ## https://github.com/docker/login-action#docker-hub
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      ## GitHub Container Registry
      ## https://github.com/docker/login-action#github-container-registry
      # - name: Login to GitHub Container Registry
      #   uses: docker/login-action@v1
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      ## GCR
      ## https://github.com/docker/login-action#google-container-registry-gcr
      # - name: Login to GCR
      #   uses: docker/login-action@v1
      #   with:
      #     registry: gcr.io
      #     username: _json_key
      #     password: ${{ secrets.GCR_JSON_KEY }}

      ## GCP Workload Identity
      # - name: Login to GCR using Workload Identity OAuth token
      #   uses: 'docker/login-action@v1'
      #   with:
      #     registry: 'us.gcr.io'
      #     username: 'oauth2accesstoken'
      #     password: '${{ steps.auth.outputs.access_token }}'

      - name: Build and deploy to Dagster Cloud hybrid
        uses: dagster-io/dagster-cloud-action/actions/hybrid_prod_deploy@v0.1
        with:
          dagster_cloud_api_token: ${{ secrets.DAGSTER_CLOUD_API_TOKEN }}
          location: ${{ toJson(matrix.location) }}
          organization_id: ${{ secrets.ORGANIZATION_ID }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
